{"ast":null,"code":"var _jsxFileName = \"/Users/yasinakbulut/Desktop/react-project/movie/src/components/movies/Movies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MoviesBoxes from \"../movies-boxes/MoviesBoxes\";\nimport \"./movies.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movies(_ref) {\n  _s();\n  let {\n    type\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    if (searchTerm) {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=YOUR_API_KEY&query=${searchTerm}`).then(response => response.json()).then(data => {\n        setMovies(data.results);\n      }).catch(error => console.log(error));\n    } else {\n      setMovies([]);\n    }\n  }, [searchTerm]);\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const types = {\n    movie: [{\n      title: \"Popular\",\n      endpoint: \"popular\"\n    }, {\n      title: \"Top Rated\",\n      endpoint: \"top_rated\"\n    }, {\n      title: \"Upcoming\",\n      endpoint: \"upcoming\"\n    }],\n    tv: [{\n      title: \"Popular\",\n      endpoint: \"popular\"\n    }, {\n      title: \"Top Rated\",\n      endpoint: \"top_rated\"\n    }, {\n      title: \"Airing Today\",\n      endpoint: \"airing_today\"\n    }, {\n      title: \"On The Air\",\n      endpoint: \"on_the_air\"\n    }]\n  };\n  const [selectedType, setSelectedType] = useState(types[type][0]);\n  const changeType = objType => setSelectedType(objType);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.title\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-buttons\",\n            children: types[type].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: selectedType.endpoint === type.endpoint ? \"filter-btn active\" : \"filter-btn\",\n              type: \"button\",\n              onClick: () => changeType(type),\n              children: type.title\n            }, type.endpoint, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesBoxes, {\n          type: type,\n          title: selectedType.title,\n          endpoint: selectedType.endpoint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Movies, \"3dwL8iFHWL52lzjBSytZeDh/Teg=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","MoviesBoxes","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_ref","_s","type","searchTerm","setSearchTerm","movies","setMovies","fetch","then","response","json","data","results","catch","error","console","log","handleInputChange","event","target","value","types","movie","title","endpoint","tv","selectedType","setSelectedType","changeType","objType","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","id","onClick","_c","$RefreshReg$"],"sources":["/Users/yasinakbulut/Desktop/react-project/movie/src/components/movies/Movies.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport MoviesBoxes from \"../movies-boxes/MoviesBoxes\";\nimport \"./movies.scss\";\n\nfunction Movies({ type }) {\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (searchTerm) {\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=YOUR_API_KEY&query=${searchTerm}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setMovies(data.results);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      setMovies([]);\n    }\n  }, [searchTerm]);\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const types = {\n    movie: [\n      {\n        title: \"Popular\",\n        endpoint: \"popular\",\n      },\n      {\n        title: \"Top Rated\",\n        endpoint: \"top_rated\",\n      },\n      {\n        title: \"Upcoming\",\n        endpoint: \"upcoming\",\n      },\n    ],\n    tv: [\n      {\n        title: \"Popular\",\n        endpoint: \"popular\",\n      },\n      {\n        title: \"Top Rated\",\n        endpoint: \"top_rated\",\n      },\n      {\n        title: \"Airing Today\",\n        endpoint: \"airing_today\",\n      },\n      {\n        title: \"On The Air\",\n        endpoint: \"on_the_air\",\n      },\n    ],\n  };\n\n  const [selectedType, setSelectedType] = useState(types[type][0]);\n\n  const changeType = (objType) => setSelectedType(objType);\n\n  return (\n    <>\n      <div className=\"all-movies\">\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <input type=\"text\" value={searchTerm} onChange={handleInputChange} />\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>{movie.title}</li>\n        ))}\n      </ul>\n        <div className=\"container\">\n          <div className=\"filter\">\n            <div className=\"filter-buttons\">\n              {types[type].map((type) => (\n                <button\n                  className={\n                    selectedType.endpoint === type.endpoint\n                      ? \"filter-btn active\"\n                      : \"filter-btn\"\n                  }\n                  key={type.endpoint}\n                  type=\"button\"\n                  onClick={() => changeType(type)}\n                >\n                  {type.title}\n                </button>\n              ))}\n            </div>\n          </div>\n          <MoviesBoxes\n            type={type}\n            title={selectedType.title}\n            endpoint={selectedType.endpoint}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}